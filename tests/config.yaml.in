
#
# Tests ELF
#

# ELF64
# =====
"test_ls":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_ls.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_ls.bin"
  arguments  : "--version"
  regexp     : "ls (GNU coreutils)"

"test_ld":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_ld.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_ld.bin"
  arguments  : "--version"
  regexp     : "ld (GNU coreutils)"

"test_gcc":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_gcc.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_gcc.bin"
  arguments  : "--version"
  regexp     : "(GCC)"

"test_hello_c":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_hello-c.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_hello-c.bin"
  regexp     : "Hello from"

"test_hello_cpp":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_hello-cpp.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_hello-cpp.bin"
  regexp     : "Hello from"

"test_nm":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_nm.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_nm.bin"
  arguments  : "--version"
  regexp     : "GNU nm (GNU Binutils)"

"test_openssl":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_openssl.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_binary_openssl.bin"
  arguments  : "version"
  regexp     : "OpenSSL"


#"test_static_binary":
#  format: ELF
#  type: binary
#  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-64/binaries/static_binary.yaml"
#  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-64/binaries/static_binary"

"test_libadd":
  format: ELF
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libadd.so.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libadd.so"

"test_libtriton":
  format: ELF
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libtriton.so.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libtriton.so"

"test_libm-2.22":
  format: ELF
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libm-2.22.so.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF64_x86-64_library_libm-2.22.so"


# ELF32
# =====
"test_ls_32":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_ls.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_ls.bin"
  arguments  : "--version"
  regexp     : "ls (GNU coreutils)"

"test_gcc_32":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_gcc.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_gcc.bin"
  arguments  : "--version"
  regexp     : "(GCC)"

# TODO: Fail
#"test_cmake_32":
#  format: ELF
#  type: binary
#  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-32/binaries/cmake.yaml"
#  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-32/binaries/cmake"

# Very slow     
#"test_clang-3.7_32":
#  format: ELF
#  type: binary
#  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-32/binaries/clang-3.7.yaml"
#  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/x86-32/binaries/clang-3.7"

"test_bzip2_32":
  format: ELF
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_bzip2.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/ELF/ELF32_x86_binary_bzip2.bin"
  arguments  : "--version"
  regexp     : "bzip2, a block-sorting file compressor."

#
# Tests PE
#

## PE32 ##
"test_cmd_x86":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_cmd.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_cmd.exe"

"test_winhello_mingw_x86":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_winhello-mingw.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_winhello-mingw.exe"

"test_regedit_x86":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_regedit.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_binary_regedit.exe"


"test_msvcrt_x86":
  format: PE
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_library_msvcrt.dll.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_library_msvcrt.dll"


"test_kernel32_x86":
  format: PE
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_library_kernel32.dll.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE32_x86_library_kernel32.dll"


## PE64 ##
"test_cmd_x64":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_cmd.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_cmd.exe"

"test_notepad_x64":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_notepad.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_notepad.exe"

"test_wordpad_x64":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_wordpad.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_wordpad.exe"

"test_winhello64_mingw_x64":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_winhello64-mingw.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_winhello64-mingw.exe"

"test_KernelBase_x64":
  format: PE
  type: library
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_library_KernelBase.dll.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_library_KernelBase.dll"

"test_MFC_Application_x64":
  format: PE
  type: binary
  config_file: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_mfc-application.exe.yaml"
  binary_path: "@LIEF_SAMPLES_DIRECTORY@/PE/PE64_x86-64_binary_mfc-application.exe"

#
# Tests MachO
#
